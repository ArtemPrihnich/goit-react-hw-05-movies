{"version":3,"file":"static/js/881.4f14dc00.chunk.js","mappings":"qLAEaA,E,OAASC,EAAAA,IAAH,gK,2JCANC,EAAOD,EAAAA,EAAAA,GAAH,uNAQO,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAAvB,IAGhBC,EAASN,EAAAA,EAAAA,IAAH,qIAKK,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,IAAvB,IAGhBC,EAAMR,EAAAA,EAAAA,IAAH,6CAIHS,EAAYT,EAAAA,EAAAA,EAAH,uFAGT,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOM,SAAvB,IAGLC,EAAOX,EAAAA,EAAAA,EAAH,uGAIJ,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOM,SAAvB,I,SC/BH,SAASE,EAAT,GAAiC,IAATC,EAAQ,EAARA,KAC3BC,EAAkCD,EAAlCC,aAAcC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,UAC5B,OACI,UAACf,EAAD,YACI,SAACK,EAAD,WAAQ,SAACE,EAAD,CAAKS,IAAG,yCAAoCH,GAAgBI,IAAKH,EAAMI,MAAM,WACrF,UAACV,EAAD,yBAAuBO,MACvB,UAACL,EAAD,oBAAaI,OAGxB,CCXM,IAAMK,EAAOpB,EAAAA,EAAAA,GAAH,wFCGF,SAASqB,EAAT,GAA6B,IAATR,EAAQ,EAARA,KAC/B,OACI,SAACO,EAAD,UACKP,EAAKS,KAAI,SAACC,GACP,OACI,SAACX,EAAD,CAAiCC,KAAMU,GAApBA,EAAKC,QAE/B,KAGZ,C,aCZc,SAASC,IACpB,OACI,SAAC,IAAD,wCAEP,C,sBCCc,SAASC,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,6GAE0BC,EAAAA,EAAAA,mBAA4BN,GAFtD,OAEcO,EAFd,OAGQH,GAAW,WACP,OAAO,OAAIG,EAAIrB,KAAKsB,KACvB,IALT,gDAOQC,QAAQC,IAAR,MAPR,0DADY,uBAAC,WAAD,wBAWZC,EACH,GAAE,CAACX,KAGA,2BACyB,KAAb,OAAPG,QAAO,IAAPA,OAAA,EAAAA,EAASS,UAAgB,SAACd,EAAD,KAClB,OAAPK,QAAO,IAAPA,OAAA,EAAAA,EAASS,QAAS,IAAK,SAAClB,EAAD,CAAUR,KAAMiB,MAGnD,C","sources":["components/CastNotify/CastNotify.styled.js","components/CastListItem/CastListItem.styled.js","components/CastListItem/CastListItem.jsx","components/CastList/CastList.styled.js","components/CastList/CastList.jsx","components/CastNotify/CastNotify.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Notify = styled.div`\n    display: block;\n    width: 400px;\n    margin: 0 auto;\n    padding: 40px 0 20px 0;\n    text-align: center;\n    font-size: 26px;\n`","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    margin-bottom: 10px;\n    width: 300px;\n    padding: 20px 0;\n    border-radius: 10px;\n    background-color: ${props => props.theme.colors.headerbgc};\n`\n\nexport const ImgBox = styled.div`\n    display: block;\n    margin: 0 auto;\n    width: 150px;\n    height: 225px;\n    background-color: ${props => props.theme.colors.gray};\n`\n\nexport const IMG = styled.img`\n    display: block;\n`\n\nexport const Character = styled.p`\n    display: block;\n    text-align: center;\n    color: ${props => props.theme.colors.textColor};\n`\n\nexport const Name = styled.p`\n    display: block;\n    text-align: center;\n    margin: 0;\n    color: ${props => props.theme.colors.textColor};\n`","import React from 'react'\nimport { Character, IMG, ImgBox, Item, Name } from './CastListItem.styled'\nimport PropTypes from 'prop-types'\n\nexport default function CastListItem({ data }) {\n    const { profile_path, name, character } = data\n    return (\n        <Item>\n            <ImgBox><IMG src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt={name} width='150' /></ImgBox>\n            <Character>Character: {character}</Character>\n            <Name>Name: {name}</Name>\n        </Item>\n    )\n}\n\nCastListItem.propTypes = {\n    data: PropTypes.shape({\n        profile_path: PropTypes.string,\n        name: PropTypes.string.isRequired,\n        character: PropTypes.string.isRequired,\n    })\n}\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n    margin: 0;\n    padding: 20px 15px;\n    list-style: none;\n`","import CastListItem from 'components/CastListItem/CastListItem'\nimport React from 'react'\nimport { List } from './CastList.styled'\nimport PropTypes from 'prop-types'\n\nexport default function CastList({ data }) {\n    return (\n        <List>\n            {data.map((item) => {\n                return (\n                    <CastListItem key={item.cast_id} data={item} />\n                )\n            })}\n        </List>\n    )\n}\n\nCastList.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.object\n    )\n}","import React from 'react'\nimport { Notify } from './CastNotify.styled'\n\nexport default function CastNotify() {\n    return (\n        <Notify>Cast information not found</Notify>\n    )\n}\n","import CastList from 'components/CastList/CastList'\nimport CastNotify from 'components/CastNotify/CastNotify'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport movieAPI from '../../services/MovieDatabaseAPI'\n\nexport default function Cast() {\n    const { movieId } = useParams()\n    const [storage, setStorage] = useState(null)\n\n    useEffect(() => {\n        async function foo() {\n            try {\n                const res = await movieAPI.getCastInformation(movieId)\n                setStorage(() => {\n                    return [...res.data.cast]\n                })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        foo()\n    }, [movieId])\n\n    return (\n        <div>\n            {storage?.length === 0 && <CastNotify />}\n            {storage?.length > 0 && <CastList data={storage} />}\n        </div>\n    )\n}\n"],"names":["Notify","styled","Item","props","theme","colors","headerbgc","ImgBox","gray","IMG","Character","textColor","Name","CastListItem","data","profile_path","name","character","src","alt","width","List","CastList","map","item","cast_id","CastNotify","Cast","movieId","useParams","useState","storage","setStorage","useEffect","movieAPI","res","cast","console","log","foo","length"],"sourceRoot":""}