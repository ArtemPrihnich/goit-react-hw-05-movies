{"version":3,"file":"static/js/488.f15b88a7.chunk.js","mappings":"qLAEaA,E,OAASC,EAAAA,IAAH,gK,+ICCJ,SAASC,IACpB,OACI,SAAC,IAAD,8BAEP,C,0BCLYC,EAAOF,EAAAA,EAAAA,GAAH,uEAEI,SAAAG,GAAK,2BAAkBA,EAAMC,MAAMC,OAAOC,MAArC,IAGbC,EAASP,EAAAA,EAAAA,EAAH,+DAEN,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,SAAvB,ICNH,SAASC,EAAT,GAAoC,IAATC,EAAQ,EAARA,KAC9BC,EAAgCD,EAAhCC,OAAQC,EAAwBF,EAAxBE,QAASC,EAAeH,EAAfG,WACzB,OACI,0BACI,UAACX,EAAD,YACI,SAACK,EAAD,UAASI,KACT,cAAGG,MAAO,CAAEC,MAAO,SAAnB,SAA+BH,KAC/B,uBAAI,IAAII,KAAKH,GAAYI,2BAIxC,CCXc,SAASC,EAAT,GAAgC,IAATR,EAAQ,EAARA,KAClC,OACI,wBACKA,EAAKS,KAAI,SAACC,GACP,OACI,SAACX,EAAD,CAA+BC,KAAMU,GAAfA,EAAKC,GAElC,KAGZ,C,sBCLc,SAASC,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,6GAE0BC,EAAAA,EAAAA,WAAoBN,GAF9C,OAEcO,EAFd,OAGQH,GAAW,WACP,OAAO,OAAIG,EAAIpB,KAAKqB,QACvB,IALT,gDAOQC,QAAQC,IAAR,MAPR,0DADY,uBAAC,WAAD,wBAWZC,EACH,GAAE,CAACX,KAEA,4BACY,OAAPG,QAAO,IAAPA,OAAA,EAAAA,EAASS,QAAS,IAAK,SAACjB,EAAD,CAAaR,KAAMgB,IACtB,KAAb,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASS,UAAgB,SAAClC,EAAD,MAGrC,C","sources":["components/CastNotify/CastNotify.styled.js","components/ReviewNotify/ReviewNotify.jsx","components/ReviewsListItem/ReviewListItem.styled.js","components/ReviewsListItem/ReviewsListItem.jsx","components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Notify = styled.div`\n    display: block;\n    width: 400px;\n    margin: 0 auto;\n    padding: 40px 0 20px 0;\n    text-align: center;\n    font-size: 26px;\n`","import React from 'react'\nimport { Notify } from '../CastNotify/CastNotify.styled'\n\nexport default function ReviewNotify() {\n    return (\n        <Notify>No reviews found</Notify>\n    )\n}\n","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n    padding: 10px 0;\n    border-bottom: ${props => `1px dashed ${props.theme.colors.black}`};\n`\n\nexport const Author = styled.p`\n    font-size: 20px;\n    color: ${props => props.theme.colors.textColor};\n`","import React from 'react'\nimport { Author, Item } from './ReviewListItem.styled'\n\nexport default function ReviewsListItem({ data }) {\n    const { author, content, created_at } = data\n    return (\n        <div>\n            <Item>\n                <Author>{author}</Author>\n                <p style={{ color: 'white' }}>{content}</p>\n                <p>{new Date(created_at).toLocaleDateString()}</p>\n            </Item>\n        </div>\n    )\n}\n","import ReviewsListItem from 'components/ReviewsListItem/ReviewsListItem'\nimport React from 'react'\n\nexport default function ReviewsList({ data }) {\n    return (\n        <ul>\n            {data.map((item) => {\n                return (\n                    <ReviewsListItem key={item.id} data={item} />\n                )\n            })}\n        </ul>\n    )\n}\n","import ReviewNotify from 'components/ReviewNotify/ReviewNotify'\nimport ReviewsList from 'components/ReviewsList/ReviewsList'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport movieAPI from '../../services/MovieDatabaseAPI'\n\nexport default function Reviews() {\n    const { movieId } = useParams()\n    const [storage, setStorage] = useState(null)\n\n    useEffect(() => {\n        async function foo() {\n            try {\n                const res = await movieAPI.getReviews(movieId)\n                setStorage(() => {\n                    return [...res.data.results]\n                })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        foo()\n    }, [movieId])\n    return (\n        <div>\n            {storage?.length > 0 && <ReviewsList data={storage} />}\n            {storage?.length === 0 && <ReviewNotify />}\n        </div>\n    )\n}\n"],"names":["Notify","styled","ReviewNotify","Item","props","theme","colors","black","Author","textColor","ReviewsListItem","data","author","content","created_at","style","color","Date","toLocaleDateString","ReviewsList","map","item","id","Reviews","movieId","useParams","useState","storage","setStorage","useEffect","movieAPI","res","results","console","log","foo","length"],"sourceRoot":""}