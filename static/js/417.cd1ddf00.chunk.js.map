{"version":3,"file":"static/js/417.cd1ddf00.chunk.js","mappings":"sPAEe,SAASA,EAAT,GAAoC,IAATC,EAAQ,EAARA,KAC9BC,EAAgCD,EAAhCC,OAAQC,EAAwBF,EAAxBE,QAASC,EAAeH,EAAfG,WACzB,OACI,0BACI,2BACI,uBAAIF,KACJ,uBAAIC,KACJ,uBAAI,IAAIE,KAAKD,GAAYE,2BAIxC,CCVc,SAASC,EAAT,GAAgC,IAATN,EAAQ,EAARA,KAClC,OACI,wBACKA,EAAKO,KAAI,SAACC,GACP,OACI,SAACT,EAAD,CAA+BC,KAAMQ,GAAfA,EAAKC,GAElC,KAGZ,C,sBCNc,SAASC,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,6GAE0BC,EAAAA,EAAAA,WAAoBN,GAF9C,OAEcO,EAFd,OAGQH,GAAW,WACP,OAAO,OAAIG,EAAIlB,KAAKmB,QACvB,IALT,gDAOQC,QAAQC,IAAR,MAPR,0DADY,uBAAC,WAAD,wBAWZC,EACH,GAAE,CAACX,KAEA,4BACY,OAAPG,QAAO,IAAPA,OAAA,EAAAA,EAASS,QAAS,IAAK,SAACjB,EAAD,CAAaN,KAAMc,IACtB,KAAb,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASS,UAAgB,mDAGrC,C","sources":["components/ReviewsListItem/ReviewsListItem.jsx","components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import React from 'react'\n\nexport default function ReviewsListItem({ data }) {\n    const { author, content, created_at } = data\n    return (\n        <div>\n            <li>\n                <p>{author}</p>\n                <p>{content}</p>\n                <p>{new Date(created_at).toLocaleDateString()}</p>\n            </li>\n        </div>\n    )\n}\n","import ReviewsListItem from 'components/ReviewsListItem/ReviewsListItem'\nimport React from 'react'\n\nexport default function ReviewsList({ data }) {\n    return (\n        <ul>\n            {data.map((item) => {\n                return (\n                    <ReviewsListItem key={item.id} data={item} />\n                )\n            })}\n        </ul>\n    )\n}\n","import ReviewsList from 'components/ReviewsList/ReviewsList'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport movieAPI from '../../services/MovieDatabaseAPI'\n\nexport default function Reviews() {\n    const { movieId } = useParams()\n    const [storage, setStorage] = useState(null)\n\n    useEffect(() => {\n        async function foo() {\n            try {\n                const res = await movieAPI.getReviews(movieId)\n                setStorage(() => {\n                    return [...res.data.results]\n                })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        foo()\n    }, [movieId])\n    return (\n        <div>\n            {storage?.length > 0 && <ReviewsList data={storage} />}\n            {storage?.length === 0 && <div>No one review found</div>}\n        </div>\n    )\n}\n"],"names":["ReviewsListItem","data","author","content","created_at","Date","toLocaleDateString","ReviewsList","map","item","id","Reviews","movieId","useParams","useState","storage","setStorage","useEffect","movieAPI","res","results","console","log","foo","length"],"sourceRoot":""}